
本人有从汇编倒golang的技术经验, 在整个语言的技术栈中, 唯独js就像五笔打字一样, 总记不住它的语言特性. 五笔放手就忘, js更是这样. 我与js和vbs的网页胶水接触年份还算早的. vbs和js病毒的时代很多人都没经历过. js 的发展史我倒是读过几遍. 作为一个热门语言, 它有没有一个统一的工程规范, 和其他语言有一致的编程思想, 我认为js和其他语言是不一样的.  js的开源代码中, 估计是个性化最多的. js6 加了class, 依然感觉不出发展方向. 不想舍弃各种自由. ts出来之后,又遇上各种语言白花齐放, 顺便加上一个转义成js支持web开发. 很难找到一个是看起来眼前一亮的. 或许是我要求比较高.

wasm 提出了一些不错的观点. 所以我觉得后面非常好. 但是有个问题, 这个东西不是巨头的利益所在. 都会在起跑线上站着.但是就是不跑.golang, dotnet都支持了语言, 但是设计思想还是一个亲web的, 也就是说我仅仅是代替js而已, js怎么写,我就怎么写. 一个套路. 这就问题大了, 用php的思想写golang,那结果和php没有区别的. 用其他语言写的js,依然还是js. 或许还不如js. 

我最先试用wasm的nacl, 复杂性有点大. 并且感觉离着生产环境还有很长距离. 其实其他语言也有支持的, 但是依然不再我的熟悉范围内.就没有去找稳定度语言. 
后来golang支持的时候很激动, 然后就遇上几个未知的错误. 感觉有点慌.然后wiki说go1.13会优化功能和性能. 但是, 都1.14了也没看见大的说明.好在很多人开始实验性的搞框架,至少他们淌过雷了. 稳定性应该好很一些. 
我还试用过dotnet, 感觉还是js味太浓, 没有微软的界面设计思想. 搞个复杂的应用就困难太多,虽然dotnet也开源. 总之不如先找个熟悉的去搞.

综上所述,我觉得替代js的还是先选golang.
